# Generated by Django 5.1.7 on 2025-06-19 16:07

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CarBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Марка автомобиля')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('image', models.ImageField(blank=True, null=True, upload_to='brands/', verbose_name='Логотип')),
                ('country', models.CharField(blank=True, max_length=100, null=True, verbose_name='Страна производитель')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='URL-идентификатор')),
            ],
            options={
                'verbose_name': 'Марка автомобиля',
                'verbose_name_plural': 'Марки автомобилей',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Модель')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('body_type', models.CharField(choices=[('sedan', 'Седан'), ('hatchback', 'Хэтчбек'), ('suv', 'Внедорожник'), ('crossover', 'Кроссовер'), ('wagon', 'Универсал'), ('pickup', 'Пикап'), ('minivan', 'Минивэн'), ('coupe', 'Купе'), ('convertible', 'Кабриолет')], default='sedan', max_length=20, verbose_name='Тип кузова')),
                ('base_price', models.DecimalField(decimal_places=2, default=1000000, max_digits=12, verbose_name='Базовая цена')),
                ('image', models.ImageField(blank=True, null=True, upload_to='models/', verbose_name='Основное изображение')),
                ('engine_volume', models.DecimalField(decimal_places=1, default=1.6, max_digits=3, verbose_name='Объем двигателя (л)')),
                ('power', models.PositiveIntegerField(default=100, verbose_name='Мощность (л.с.)')),
                ('transmission', models.CharField(choices=[('manual', 'Механическая'), ('automatic', 'Автоматическая'), ('robot', 'Робот'), ('variator', 'Вариатор')], default='manual', max_length=20, verbose_name='Коробка передач')),
                ('fuel_type', models.CharField(choices=[('petrol', 'Бензин'), ('diesel', 'Дизель'), ('gas', 'Газ'), ('electric', 'Электро'), ('hybrid', 'Гибрид')], default='petrol', max_length=20, verbose_name='Тип топлива')),
                ('fuel_consumption', models.DecimalField(blank=True, decimal_places=1, default=7.5, max_digits=3, null=True, verbose_name='Расход топлива (л/100км)')),
                ('max_speed', models.PositiveIntegerField(blank=True, default=180, null=True, verbose_name='Максимальная скорость (км/ч)')),
                ('acceleration', models.DecimalField(blank=True, decimal_places=1, default=10.0, max_digits=3, null=True, verbose_name='Разгон до 100 км/ч (сек)')),
                ('length', models.PositiveIntegerField(blank=True, default=4500, null=True, verbose_name='Длина (мм)')),
                ('width', models.PositiveIntegerField(blank=True, default=1800, null=True, verbose_name='Ширина (мм)')),
                ('height', models.PositiveIntegerField(blank=True, default=1500, null=True, verbose_name='Высота (мм)')),
                ('wheelbase', models.PositiveIntegerField(blank=True, default=2600, null=True, verbose_name='Колесная база (мм)')),
                ('clearance', models.PositiveIntegerField(blank=True, default=160, null=True, verbose_name='Дорожный просвет (мм)')),
                ('trunk_volume', models.PositiveIntegerField(blank=True, default=400, null=True, verbose_name='Объем багажника (л)')),
                ('is_new', models.BooleanField(default=False, verbose_name='Новинка')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Популярная модель')),
                ('slug', models.SlugField(blank=True, max_length=100, unique=True, verbose_name='URL-идентификатор')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='models', to='car.carbrand', verbose_name='Марка')),
            ],
            options={
                'verbose_name': 'Модель автомобиля',
                'verbose_name_plural': 'Модели автомобилей',
                'ordering': ['brand__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название комплектации')),
                ('equipment_type', models.CharField(choices=[('standard', 'Стандарт'), ('comfort', 'Комфорт'), ('luxury', 'Люкс'), ('premium', 'Премиум'), ('sport', 'Спорт')], max_length=20, verbose_name='Тип комплектации')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('power_modifier', models.FloatField(default=1.0, help_text='1.0 = базовая мощность, 1.1 = +10%', verbose_name='Модификатор мощности')),
                ('max_speed_modifier', models.FloatField(default=1.0, verbose_name='Модификатор максимальной скорости')),
                ('acceleration_modifier', models.FloatField(default=1.0, help_text='0.9 = быстрее на 10%', verbose_name='Модификатор разгона')),
                ('fuel_consumption_modifier', models.FloatField(default=1.0, verbose_name='Модификатор расхода топлива')),
                ('has_climate_control', models.BooleanField(default=True, verbose_name='Климат-контроль')),
                ('multimedia_system', models.CharField(blank=True, max_length=100, null=True, verbose_name='Мультимедийная система')),
                ('seat_heating', models.CharField(blank=True, max_length=100, null=True, verbose_name='Подогрев сидений')),
                ('has_heated_steering_wheel', models.BooleanField(default=False, verbose_name='Подогрев руля')),
                ('has_leather_seats', models.BooleanField(default=False, verbose_name='Кожаные сиденья')),
                ('has_sunroof', models.BooleanField(default=False, verbose_name='Люк')),
                ('has_navigation', models.BooleanField(default=False, verbose_name='Навигация')),
                ('has_parking_sensors', models.BooleanField(default=False, verbose_name='Парктроники')),
                ('has_rear_camera', models.BooleanField(default=False, verbose_name='Камера заднего вида')),
                ('has_cruise_control', models.BooleanField(default=False, verbose_name='Круиз-контроль')),
                ('has_keyless_entry', models.BooleanField(default=False, verbose_name='Бесключевой доступ')),
                ('has_auto_lights', models.BooleanField(default=False, verbose_name='Автоматические фары')),
                ('has_rain_sensor', models.BooleanField(default=False, verbose_name='Датчик дождя')),
                ('wheel_size', models.CharField(blank=True, help_text='Например: R16, R17', max_length=20, null=True, verbose_name='Размер дисков')),
                ('main_image', models.ImageField(blank=True, null=True, upload_to='equipment/', verbose_name='Основное изображение')),
                ('car_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='car.carmodel', verbose_name='Модель автомобиля')),
            ],
            options={
                'verbose_name': 'Комплектация',
                'verbose_name_plural': 'Комплектации',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Год выпуска')),
                ('color', models.CharField(max_length=50, verbose_name='Цвет')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена')),
                ('mileage', models.PositiveIntegerField(verbose_name='Пробег (км)')),
                ('transmission', models.CharField(choices=[('manual', 'Механическая'), ('automatic', 'Автоматическая'), ('robot', 'Робот'), ('variator', 'Вариатор')], default='manual', max_length=20, verbose_name='Коробка передач')),
                ('fuel_type', models.CharField(choices=[('petrol', 'Бензин'), ('diesel', 'Дизель'), ('gas', 'Газ'), ('electric', 'Электро'), ('hybrid', 'Гибрид')], default='petrol', max_length=20, verbose_name='Тип топлива')),
                ('body_type', models.CharField(choices=[('sedan', 'Седан'), ('hatchback', 'Хэтчбек'), ('suv', 'Внедорожник'), ('crossover', 'Кроссовер'), ('wagon', 'Универсал'), ('pickup', 'Пикап'), ('minivan', 'Минивэн'), ('coupe', 'Купе'), ('convertible', 'Кабриолет')], default='sedan', max_length=20, verbose_name='Тип кузова')),
                ('equipment_display', models.CharField(choices=[('standard', 'Стандарт'), ('comfort', 'Комфорт'), ('luxury', 'Люкс'), ('premium', 'Премиум'), ('sport', 'Спорт')], default='standard', max_length=20, verbose_name='Отображаемая комплектация')),
                ('engine_volume', models.DecimalField(decimal_places=1, default=1.6, max_digits=3, verbose_name='Объем двигателя (л)')),
                ('power', models.PositiveIntegerField(default=100, verbose_name='Мощность (л.с.)')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_available', models.BooleanField(default=True, verbose_name='В наличии')),
                ('image', models.ImageField(blank=True, null=True, upload_to='cars/', verbose_name='Изображение')),
                ('vin', models.CharField(blank=True, max_length=17, null=True, verbose_name='VIN-номер')),
                ('is_new', models.BooleanField(default=False, verbose_name='Новинка')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cars', to='car.carmodel', verbose_name='Модель')),
                ('equipment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cars', to='car.equipment', verbose_name='Комплектация')),
            ],
            options={
                'verbose_name': 'Автомобиль',
                'verbose_name_plural': 'Автомобили',
            },
        ),
        migrations.CreateModel(
            name='EquipmentFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название функции')),
                ('category', models.CharField(choices=[('safety', 'Безопасность'), ('comfort', 'Комфорт'), ('multimedia', 'Мультимедиа'), ('exterior', 'Экстерьер'), ('interior', 'Интерьер'), ('other', 'Другое')], max_length=20, verbose_name='Категория')),
                ('is_included', models.BooleanField(default=True, verbose_name='Включено в комплектацию')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='features', to='car.equipment', verbose_name='Комплектация')),
            ],
            options={
                'verbose_name': 'Функция комплектации',
                'verbose_name_plural': 'Функции комплектаций',
            },
        ),
        migrations.CreateModel(
            name='EquipmentImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='equipment_images/', verbose_name='Изображение')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок отображения')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='car.equipment', verbose_name='Комплектация')),
            ],
            options={
                'verbose_name': 'Изображение комплектации',
                'verbose_name_plural': 'Изображения комплектаций',
            },
        ),
        migrations.CreateModel(
            name='ModelImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='model_images/', verbose_name='Изображение')),
                ('title', models.CharField(blank=True, max_length=100, null=True, verbose_name='Заголовок')),
                ('is_main', models.BooleanField(default=False, verbose_name='Основное изображение')),
                ('car_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='car.carmodel', verbose_name='Модель автомобиля')),
            ],
            options={
                'verbose_name': 'Изображение модели',
                'verbose_name_plural': 'Изображения моделей',
            },
        ),
    ]
